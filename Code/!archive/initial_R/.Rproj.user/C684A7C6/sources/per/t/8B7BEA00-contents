## Note: I turned off all of the "refresh" in the make_table functions because I don't
## want them syncing with the Overleaf anymore. You will have to turn them back on
## with an updated "save_path" if you want to re-sync.

# Load libraries and data -------------------------------------------------
library(haven)
library(tidyverse)

source("functions/make_table.R")

df1 <- read_dta("data/cleaned_data.dta") %>% 
  mutate(messenger_new = case_when(messenger == 0 ~ "Other",
                                   messenger == 1 ~ "Messenger"),
         lost_new = case_when(lostT1 == 0 ~ "Won",
                              lostT1 == 1 ~ "Lost"),
         lost_new = relevel(factor(lost_new), "Won"),
         messenger_lost = paste(messenger_new, lost_new, sep = ", "),
         messenger_lost = factor(messenger_lost, levels = c("Messenger, Won", "Other, Won", "Messenger, Lost", "Other, Lost"))) %>% 
  filter(!is.na(lost_new)) %>% 
  group_by(messenger_new, lost_new) %>% 
  mutate(mean_dictator = mean(dictator_all, na.rm = T),
         mean_behavior = mean(behavior_all, na.rm = T)) %>% 
  ungroup()

df2 <- read_dta("data/cleaned_data2.dta") %>% 
  filter(!is.na(lostT1)) %>% 
  mutate(messenger_new = case_when(messenger == 0 ~ "Other",
                                   messenger == 1 ~ "Messenger"),
         lost_new = case_when(lostT1 == 0 ~ "Won",
                              lostT1 == 1 ~ "Lost"),
         lost_new = relevel(factor(lost_new), "Won"),
         messenger_lost = paste(messenger_new, lost_new, sep = ", "),
         messenger_lost = factor(messenger_lost, levels = c("Messenger, Won", "Other, Won", "Messenger, Lost", "Other, Lost"))) %>% 
  mutate(Instructions2 = haven::as_factor(Instructions2),
         Instructions2 = case_when(Instructions2 == "Shared" ~ "Shared Fate",
                                   Instructions2 == "Opposite" ~ "Opposite Fate", 
                                   TRUE ~ Instructions2),
         Instructions2 = factor(Instructions2, levels = c("Shared Fate", "Unrelated Fate", "Opposite Fate"))) %>% 
  mutate(Instructions1 = haven::as_factor(Instructions1),
         Instructions1 = factor(Instructions1, levels = c("0.50 Opposite", "0.05 Opposite", 
                                                          "0.50 Shared", "0.05 Shared", "Unrelated Fate" 
         ))) %>% 
  mutate(likePartner = (likePartner-1)/6)

save_path <- "../../../../Dropbox/Apps/Overleaf/Shoot the Messenger Paper/"

s1behavior_outcomes <- c("dictator_all", "spin_all", "pd_all", "behavior_all", 
                         "trust", "nice", "likeable", "generous", "likeOther")
s1behavior_outcomes_names <- c("Dictator Game", "Spin the Wheel", "Prisoner's Dilemma", "Behavioral Index",
                               "Trustworthy", "Nice", "Likeable", "Generous", "Attitudes Index")

# *Behavior Table 1. Main regression with and without robust ----------------------
outcomes <- c("dictator_all", "spin_all", "pd_all", "behavior_all")

base_list <- map(outcomes,
                 ~lm_robust(as.formula(paste0(.x, "~lostT1*messenger")), data = df1))

robust_list <- map(outcomes[4],
                   ~lm_robust(as.formula(
                     paste(paste0(.x, "~lostT1*messenger"),
                           "age", "female", "ideology", "education", "employed", "white", "hispNew", "believeLuck", "emotionReg", "justWorld", sep = "+")),
                     data = df1))

list <- append(base_list, robust_list)

# STM effect
pvalues1 <- rep(0, 5)
for(i in seq_along(list)){
  pvalues1[i] <-  as.numeric(summary(glht(list[[i]], c("messenger + lostT1:messenger = 0")))$test$pvalues)
}

# pvalues1[5] <- summary(glht(list[[5]], 
#                linfct = matrix(data = c(0,0,1,0,0,0,0,0,0,0,0,0,0,1), nrow = 1),
#                alternative = "less"))$test$pvalues

# RTM effect
pvalues2 <- rep(0,5)
for(i in seq_along(list)){
  pvalues2[i] <-  list[[i]]$p.value[3]
}

# TMB
joint_hypothesis <- c("messenger  = 0", "lostT1:messenger = 0")

pvalues3 <- rep(0,5)
for(i in seq_along(list)){
  pvalues3[i] <-  linearHypothesis(list[[i]], joint_hypothesis, test = "F")$`Pr(>F)`[2]
}


# RTM = -STM?
pvalues4 <- rep(0, 5)
for(i in seq_along(list)){
  pvalues4[i] <-  as.numeric(summary(glht(list[[i]], linfct = c("2*messenger + lostT1:messenger = 0")))$test$pvalues)
}


make_texreg("behavior_regression", list,
            custom.model.names = c("\\makecell{Dictator\\\\Game}", "\\makecell{Spin the\\\\Wheel}", 
                                   "\\makecell{Prisoner's\\\\Dilemma}", "\\makecell{Behavioral\\\\Index}",
                                   "\\makecell{Behavioral\\\\Index}"),
            custom.coef.map = list("lostT1" = "Lost T1",
                                   "messenger" = "Messenger",
                                   "lostT1:messenger" = "Lost x Messenger",
                                   "(Intercept)" = "Constant"),
            custom.gof.rows = list("Demographic Controls" = c(rep("No", 4), rep("Yes", 1)),
                                   "STM: $\\beta_2 + \\beta_3 = 0$ $p$-values" = pvalues1,
                                   "RTM: $\\beta_2 = 0$ $p$-values" = pvalues2,
                                   "TMB: $\\beta_2 = 0, \\beta_3 = 0$ $p$-values" = pvalues3,
                                   "RTM = $-$STM: $2 \\beta_2+\\beta_3 = 0$ $p$-values" = pvalues4),
            caption = "Regressions of the behavioral measures on losing in task 1, being paired with the messenger, and their interaction (including demographic controls).", 
            scalebox = .9,
            refresh = TRUE,
            custom.note = paste("\\item[\\hspace{-5mm}] \\textit{Note:} OLS regressions with robust standard errors in parentheses. 
                                In the dictator game, the dependent variable (DV) is giving up to 50 cents to the partner. 
                                In the spin the wheel task, the DV is choosing the partner to spin the wheel on one’s behalf instead of the computer. 
                                In the prisoner’s dilemma, the DV is choosing cooperation. 
                                                                  In the behavioral index, the DV is calculated by averaging the standardized scores of the dictator game, spin the wheel task, and prisoner's dilemma.
                                Demographic controls include age, gender, ideology,
                                education, employment, white, Hispanic, the belief in luck scale, the emotion regulation scale, and the just world scale.",
                                "\\item[\\hspace{-5mm}] %stars."),
            digits = 2)

s1_behavior_pvalues3 <- round(pvalues3, digits = 2)
s1_behavior_pvalues4 <- round(pvalues4, digits = 2)


# Figure 1 ----------------------------------------------------------------


caption_all <- map_chr(s1behavior_outcomes_names, ~paste0("Difference in the DV of the ", .x, " for messengers and non-messengers 
                                              by losing (STM) and winning (RTM), Study 1"))

footnote_all <- c(
  "In the dictator game, the DV is giving up to 50 cents to the partner.",
  "In the spin the wheel task, the DV is a binary measure of choosing the partner to spin the wheel on one's behalf instead of the computer.",
  "In the prisoner's dilemma, the DV is a binary measure of choosing cooperation.",
  "In the behavioral index, the DV is calculated by averaging the standardized scores of the dictator game, spin the wheel task, and prisoner's dilemma.",
  "The trustworthy DV asks respondents to rate the messenger's trustworthiness on a 7-point Likert scale.",
  "The nice DV asks respondents to rate the messenger's niceness on a 7-point Likert scale.",
  "The likeable DV asks respondents to rate the messenger's likability on a 7-point Likert scale.",
  "The generous DV asks respondents to rate the messenger's generosity on a 7-point Likert scale.",
  "In the attitudes index, the DV is calculated by averaging the standardized ratings of the trustworthy, nice, likeable, and generous DVs to an index ranging from 0 to 1.")

all_list = list()

# First creates individual figures for each of the outcome variables
for(i in 1:9){
  d <- df1 %>% 
    mutate(messenger_new = relevel(factor(messenger_new), ref = "Other")) %>% 
    group_by(lost_new) %>% 
    reframe(tidy(lm_robust(as.formula(paste0(s1behavior_outcomes[i], "~ messenger_new")), data = pick(everything())))) %>% 
    filter(term != "(Intercept)") %>% 
    mutate(lost_new = case_when(lost_new == "Won" ~ "Reward the\nMessenger",
                                lost_new == "Lost" ~ "Shoot the\nMessenger"),
           lost_new = fct_rev(factor(lost_new)))
  
  # Change y-axis label and limit/breaks depending on the outcome measure in question.
  if(s1behavior_outcomes[i] == "dictator_all"){
    yaxis = "Cents Given"
  } else if(s1behavior_outcomes[i] == "spin_all"){
    yaxis = "% Choose Human"
  } else if(s1behavior_outcomes[i] == "spin_all"){
    yaxis = "% Cooperate"
  } else if(s1behavior_outcomes[i] %in% c("trust", "nice", "likeable", "generous")){
    yaxis = "Rating"
  } else if(s1behavior_outcomes[i] %in% c("behavior_all", "likeOther")){
    yaxis = "Index"
  }
  
  if(s1behavior_outcomes[i] %in% c("spin_all", "pd_all", "behavior_all")){
    lim = c(-.3, .35)
    breaks = round(seq(-.3, .3, .1), digits = 2)
  } else if(s1behavior_outcomes[i] == "dictator_all"){
    lim = c(-4,4.55)
    breaks = seq(-4, 4, 1)
  } else if(s1behavior_outcomes[i] %in% c("trust", "nice", "likeable", "generous")){
    lim = c(-.5, .5)
    breaks = seq(-.5, .5, .1)
  } else if(s1behavior_outcomes[i] == "likeOther"){
    lim = c(-.1,.1)
    breaks = seq(-.1, .1, .05)
  }
  
  g <- ggplot(d, aes(x = lost_new, y = estimate)) +
    geom_bar(stat="identity", fill="lightgray", 
             position=position_dodge()) +
    geom_errorbar(aes(ymin=conf.low, ymax=conf.high), width=.2,
                  position=position_dodge(.9)) +
    scale_y_continuous(limits = lim, breaks = breaks)+
    theme_few() + 
    geom_hline(yintercept = 0) +
    labs(title = s1behavior_outcomes_names[i], x= NULL, y = yaxis) + 
    theme(axis.text.x = element_text(colour = c("red", "green4")))
  
  
  ggsave(g, file = paste0(save_path, "figures/study1", s1behavior_outcomes[i], ".png"),
         height = 5.5, width = 4)
  
  tex <- paste0("\\renewcommand{\\baselinestretch}{1.25}%
\\begin{figure}[!t]%
  \\centering
  \\captionsetup{width=0.5\\linewidth}
  \\includegraphics[width=0.5\\linewidth]{figures/study1", s1behavior_outcomes[i], ".png}
  \\caption{", caption_all[i], ". 
  \\textit{Note: OLS regression with robust standard errors, with error bars representing 95\\% confidence intervals. ", footnote_all[i], "}}
  \\label{fig:study1", s1behavior_outcomes[i], "}
\\end{figure}%
\\renewcommand{\\baselinestretch}{1.67}%")
  
  cat(tex, sep = "\n", file = paste0(save_path, "figures_tex/study1_", s1behavior_outcomes[i], ".tex"))
  
  all_list[[i]] <- g
}

# Now, combine plots into two: behavior outcomes (1-4) and attitude outcomes (5-9)
behavior_list = all_list[1:4]
attitude_list = all_list[5:9]

# Make new ggplot for these two groups of outcomes (behaviors and attitudes)
study1_all <- function(object){
  all <- do.call("grid.arrange", c(object, nrow = 1))
  
  if(str_detect(deparse(substitute(object)), "behavior")){
    name <- "behavior"
    footnote <- "In the dictator game, the dependent variable (DV) is giving up to 50 cents to the partner. 
                                In the spin the wheel task, the DV is choosing the partner to spin the wheel on one’s behalf instead of the computer. 
                                In the prisoner’s dilemma, the DV is choosing cooperation. 
                                In the behavioral index, the DV is calculated by averaging the standardized scores of the dictator game, spin the wheel task, and prisoner's dilemma."
    footnote_addition <- paste0(" The p-values of the test that $RTM = -STM$ are ", s1_behavior_pvalues3[1], ", ", s1_behavior_pvalues3[2], 
                                ", ", s1_behavior_pvalues3[3], ", and ", s1_behavior_pvalues3[4], 
                                ", respectively, for each facet and the index. The p-values of the messenger bias are ",
                                s1_behavior_pvalues4[1], ", ", s1_behavior_pvalues4[2], ", ", s1_behavior_pvalues4[3], ", and ", 
                                s1_behavior_pvalues4[4], ", respectively, for each facet and the index.")
    
  } else if (str_detect(deparse(substitute(object)), "attitude")){
    name <- "attitude"
    footnote <- "The trustworthy, nice, likeable, and generous DVs asks respondents to rate these messenger's characteristics on a 7-point Likert scale, where a score of 1 indicates that the messenger does not have that trait at all, while a score of 7 means that a trait describes the messenger extremely well.
    In the attitudes index, the DV is calculated by averaging the standardized ratings of the trustworthy, nice, likeable, and generous DVs to an index ranging from 0 to 1."
    footnote_addition <- paste0(" The p-values of the test that $RTM = -STM$ are ", s1_attitude_pvalues3[1], ", ", s1_attitude_pvalues3[2], 
                                ", ", s1_attitude_pvalues3[3], ", ", s1_attitude_pvalues3[4], ", and ", s1_attitude_pvalues3[5], 
                                ", respectively, for each facet and index. The p-values of TMB (RTM - STM) are ",
                                s1_attitude_pvalues4[1], ", ", s1_attitude_pvalues4[2], ", ", s1_attitude_pvalues4[3], ", and ", 
                                s1_attitude_pvalues4[4], ", respectively, for each facet and the index.")
  }
  
  ggsave(all, file = paste0(save_path, "figures/study1_", name, "_list.png"),
         height = 5.5, width = 12)
  
  
  caption <- paste0("Difference in the DVs of the ", name, " measures for messengers and non-messengers 
                                              by losing (STM) and winning (RTM), Study 1")
  
  tex <- paste0("\\renewcommand{\\baselinestretch}{1.25}%
\\begin{figure}[!t]%
  \\centering
  \\includegraphics[width=1.0\\textwidth]{figures/study1_", name, "_list.png}
  \\caption{", caption, ". 
  \\textit{Note: OLS regression with robust standard errors, with error bars representing 95\\% confidence intervals. ", footnote, footnote_addition, "}}
  \\label{fig:", name, "_list}
\\end{figure}%
\\renewcommand{\\baselinestretch}{1.67}%")
  
  cat(tex, sep = "\n", file = paste0(save_path, "figures_tex/study1_", name, "_list.tex"))
  
}

study1_all(behavior_list)
study1_all(attitude_list)




